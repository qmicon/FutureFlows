import Head from "next/head";
import { useCallback, useEffect, useState } from "react";
import { Filter } from "../../components/Filter";
import { MarketCard } from "../../components/MarketCard";
import Navbar from "../../components/Navbar";
import { useData } from "../../contexts/DataContext";
import styles from "../styles/Home.module.css"
import { useSession, signIn, signOut } from "next-auth/react"
import LoadingOverlay from 'react-loading-overlay';


export default function Home() {
  const { data: session } = useSession()
  const { futureFlows, account, loadWeb3, loading } = useData();
  const [markets, setMarkets] = useState([]);
  const [buttonVisible, setButtonVisible] = useState(false)
  const [loaderactive, setActive] = useState(false)
  const getMarkets = useCallback(async () => {
    var totalQuestions = await futureFlows.methods
      .totalQuestions()
      .call({ from: account });
    var dataArray = [];
    for (var i = 0; i < totalQuestions; i++) {
      var data = await futureFlows.methods.questions(i).call({ from: account });
      dataArray.push({
        id: data.id,
        title: data.question,
        imageHash: data.creatorImageHash,
        totalAmount: data.totalAmount,
        totalYes: data.totalYesAmount,
        totalNo: data.totalNoAmount,
      });
    }
    setMarkets(dataArray);
  }, [account, futureFlows]);

  useEffect(() => {
    loadWeb3().then(() => {
      if (!loading) getMarkets();
    });
  }, [loading]);

  useEffect(() => {
    if(session && session.user) {
      setButtonVisible(true)
    }
    else {
      setButtonVisible(false)
    }
  }, [session]);


  return (
    <>
      <LoadingOverlay
        active={loaderactive}
        spinner
        text='Loading your content...'
        >
    <div className={styles.container}>
      <Head>
        <title>FutureFlows</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={{display: "flex", justifyContent: "space-between"}}>
      <div >
          {session && session.user ? (
            <button style={{marginRight: 20}} onClick={() => signOut()}>Sign out</button>
          ) : (
            <button style={{marginRight: 20, width: 70, marginTop: 20, fontSize: "1rem", fontWeight: "bold", color: "#33c5ff"}}
             onClick={() => signIn()}>Sign in</button>
          )}
        </div>
        <div>
          {buttonVisible ? (<button style={{marginRight: 20, width: 70, marginTop: 20, fontSize: "1rem", fontWeight: "bold", color: "#33c5ff"}}>Enable USDC In Wallet</button>) : (<div></div>)}
        </div>
      <Navbar />
      </div>
      <main className="w-full flex flex-col sm:flex-row flex-wrap sm:flex-nowrap py-4 flex-grow max-w-5xl">
        <div>
          {session && session.user ? (

            <div className={styles.card}>
              <div className={styles.cardContent}>
                <h2>Email</h2>
                <p>
                  {session.user.email}
                </p>
                <p>
                  {session.user?.address}
                </p>
              </div>
            </div>
          ) : (
            <p></p>
          )}
        </div>
        <div className="w-full flex flex-col flex-grow pt-1">
          <div className="relative text-gray-500 focus-within:text-gray-400 w-full">
            <span className="absolute inset-y-0 left-0 flex items-center px-3">
              <svg
                fill="none"
                stroke="currentColor"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                viewBox="0 0 24 24"
                className="w-5 h-5"
              >
                <path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </span>
            <input
              type="search"
              name="q"
              className="w-full py-3 px-3 text-base text-gray-700 bg-gray-100 rounded-md pl-10 focus:outline-none"
              placeholder="Search markets..."
              autoComplete="off"
            />
          </div>
          <div className="flex flex-row space-x-2 md:space-x-5 items-center flex-wrap mt-4">
            <Filter
              list={["All", "Crypto", "Football", "Covid 19", "Politics"]}
              activeItem="All"
              category="Category"
              onChange={() => {}}
            />
            <Filter
              list={["Volume", "Newest", "Expiring"]}
              activeItem="Volume"
              category="Sort By"
              onChange={() => {}}
            />
          </div>
          <span className="font-bold my-3 text-lg">Market</span>
          <div className="flex flex-wrap overflow-hidden sm:-mx-1 md:-mx-2">
            {markets.map((market) => {
              return (
                <MarketCard
                  id={market.id}
                  key={market.id}
                  title={market.title}
                  totalAmount={market.totalAmount}
                  totalYes={market.totalYes}
                  totalNo={market.totalNo}
                  imageHash={market.imageHash}
                />
              );
            })}
          </div>
        </div>
      </main>
    </div>
    </LoadingOverlay>
    </>
  );
}
